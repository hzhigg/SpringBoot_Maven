<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true" >
	<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="LOG_HOME" value="./logs" />
    
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n</pattern>
        </encoder>
    </appender>
    
    <!-- 按照每天生成日志文件 -->
    <appender name="FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/runtime.log.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} %-5level[%thread]%logger{56}.%method:%L -%msg%n</pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>40MB</MaxFileSize>
        </triggeringPolicy>-->
    </appender>
    
     <logger name="jdbc.sqlonly" level="WARN">
        <appender-ref ref="STDOUT"/>
    </logger>
    <logger name="jdbc.audit" level="WARN">
        <appender-ref ref="STDOUT"/>
    </logger>
    <logger name="jdbc.resultset" level="WARN">
        <appender-ref ref="STDOUT"/>
    </logger>
    <logger name="jdbc.connection" level="WARN">
        <appender-ref ref="STDOUT"/>
    </logger>
    
   <!--这种方式打印sql  
   DEBUG[http-nio-8080-exec-1]com.demo.user.mapper.UserMapper.selectByPrimaryKey.debug:159 -==>  Preparing: select id, create_time, create_user, is_valid, update_time, update_user, version, email, nick_name, password, user_name from user where id = ? 
   DEBUG[http-nio-8080-exec-1]com.demo.user.mapper.UserMapper.selectByPrimaryKey.debug:159 -==> Parameters: 1(Long)
    -->
 	<!-- <logger name="java.sql" level="DEBUG" >
        <appender-ref ref="STDOUT" />
    </logger> 
    
    <logger name="com.demo" level="DEBUG"/>  -->
    
    <root>
        <level value="INFO" />
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
    </root>
</configuration>