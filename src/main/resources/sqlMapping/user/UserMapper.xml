<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.user.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.demo.user.entity.User">
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="create_user" jdbcType="BIGINT" property="createUser" />
		<result column="is_valid" jdbcType="INTEGER" property="isValid" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="update_user" jdbcType="BIGINT" property="updateUser" />
		<result column="version" jdbcType="INTEGER" property="version" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="nick_name" jdbcType="VARCHAR" property="nickName" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
	</resultMap>
	<sql id="Base_Column_List">
		id, create_time, create_user, is_valid, update_time, update_user,
		version, email,nick_name, password, user_name
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user
		where id = #{id,jdbcType=BIGINT}
	</delete>
	
	<insert id="insertSelective" parameterType="com.demo.user.entity.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
			<if test="isValid != null">
				is_valid,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateUser != null">
				update_user,
			</if>
			<if test="version != null">
				version,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="nickName != null">
				nick_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="userName != null">
				user_name,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=BIGINT},
			</if>
			<if test="isValid != null">
				#{isValid,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=BIGINT},
			</if>
			<if test="version != null">
				#{version,jdbcType=INTEGER},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				#{nickName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.demo.user.entity.User">
		update user
		<set>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=BIGINT},
			</if>
			<if test="isValid != null">
				is_valid = #{isValid,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=BIGINT},
			</if>
			<if test="version != null">
				version = #{version,jdbcType=INTEGER},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				nick_name = #{nickName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	<insert id="insertBatchSelective" parameterType="java.util.List">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="list[0].id!=null">
				id,
			</if>
			<if test="list[0].createTime!=null">
				create_time,
			</if>
			<if test="list[0].createUser!=null">
				create_user,
			</if>
			<if test="list[0].isValid!=null">
				is_valid,
			</if>
			<if test="list[0].updateTime!=null">
				update_time,
			</if>
			<if test="list[0].updateUser!=null">
				update_user,
			</if>
			<if test="list[0].version!=null">
				version,
			</if>
			<if test="list[0].email!=null">
				email,
			</if>
			<if test="list[0].nickName!=null">
				nick_name,
			</if>
			<if test="list[0].password!=null">
				password,
			</if>
			<if test="list[0].userName!=null">
				user_name,
			</if>
		</trim>
		values
		<foreach collection="list" index="index" item="item" separator=",">
			<trim prefix=" (" suffix=")" suffixOverrides=",">
				<if test="item.id!=null">
					#{item.id,jdbcType=BIGINT},
				</if>
				<if test="item.createTime!=null">
					#{item.createTime,jdbcType=TIMESTAMP},
				</if>
				<if test="item.createUser!=null">
					#{item.createUser,jdbcType=BIGINT},
				</if>
				<if test="item.isValid!=null">
					#{item.isValid,jdbcType=INTEGER},
				</if>
				<if test="item.updateTime!=null">
					#{item.updateTime,jdbcType=TIMESTAMP},
				</if>
				<if test="item.updateUser!=null">
					#{item.updateUser,jdbcType=BIGINT},
				</if>
				<if test="item.version!=null">
					#{item.version,jdbcType=INTEGER},
				</if>
				<if test="item.email!=null">
					#{item.email,jdbcType=VARCHAR},
				</if>
				<if test="item.nickName!=null">
					#{item.nickName,jdbcType=VARCHAR},
				</if>
				<if test="item.password!=null">
					#{item.password,jdbcType=VARCHAR},
				</if>
				<if test="item.userName!=null">
					#{item.userName,jdbcType=VARCHAR},
				</if>
			</trim>
		</foreach>
	</insert>
	<update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
		<foreach collection="list" index="index" item="item" separator=";">
			update user
			<set>
				<if test="item.createTime!=null">
					create_time=#{item.createTime,jdbcType=TIMESTAMP},
				</if>
				<if test="item.createUser!=null">
					create_user=#{item.createUser,jdbcType=BIGINT},
				</if>
				<if test="item.isValid!=null">
					is_valid=#{item.isValid,jdbcType=INTEGER},
				</if>
				<if test="item.updateTime!=null">
					update_time=#{item.updateTime,jdbcType=TIMESTAMP},
				</if>
				<if test="item.updateUser!=null">
					update_user=#{item.updateUser,jdbcType=BIGINT},
				</if>
				<if test="item.version!=null">
					version=#{item.version,jdbcType=INTEGER},
				</if>
				<if test="item.email!=null">
					email=#{item.email,jdbcType=VARCHAR},
				</if>
				<if test="item.nickName!=null">
					nick_name=#{item.nickName,jdbcType=VARCHAR},
				</if>
				<if test="item.password!=null">
					password=#{item.password,jdbcType=VARCHAR},
				</if>
				<if test="item.userName!=null">
					user_name=#{item.userName,jdbcType=VARCHAR},
				</if>
			</set>
			where
			id = #{item.id,jdbcType=BIGINT}
		</foreach>
	</update>
	<delete id="deleteList" parameterType="java.util.List">
		delete from user where id in
		<foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
			#{item}
		</foreach>
	</delete>
	<select id="findList" parameterType="com.demo.user.entity.User"resultMap="BaseResultMap">
		select * from user where 1=1
		<if test="id!=null">
			and id=#{id,jdbcType=BIGINT}
		</if>
		<if test="createTime!=null">
			and create_time=#{createTime,jdbcType=TIMESTAMP}
		</if>
		<if test="createUser!=null">
			and create_user=#{createUser,jdbcType=BIGINT}
		</if>
		<if test="isValid!=null">
			and is_valid=#{isValid,jdbcType=INTEGER}
		</if>
		<if test="updateTime!=null">
			and update_time=#{updateTime,jdbcType=TIMESTAMP}
		</if>
		<if test="updateUser!=null">
			and update_user=#{updateUser,jdbcType=BIGINT}
		</if>
		<if test="version!=null">
			and version=#{version,jdbcType=INTEGER}
		</if>
		<if test="email!=null">
			and email=#{email,jdbcType=VARCHAR}
		</if>
		<if test="nickName!=null">
			and nick_name=#{nickName,jdbcType=VARCHAR}
		</if>
		<if test="password!=null">
			and password=#{password,jdbcType=VARCHAR}
		</if>
		<if test="userName!=null">
			and user_name=#{userName,jdbcType=VARCHAR}
		</if>
	</select>
	<update id="updateIsValidList" parameterType="java.util.Map">
		update user
		<set>
			is_valid=#{isValid,jdbcType=INTEGER}
		</set>
		where id in
		<foreach close=")" collection="list" index="index" item="item"
			open="(" separator=",">
			#{item}
		</foreach>
	</update>
	<update id="updateIsValid" parameterType="java.util.Map">
		update user
		<set>
			is_valid=#{isValid,jdbcType=INTEGER}
		</set>
		where id =#{id}
	</update>
	<update id="updateVersionAutoIncrease" parameterType="java.lang.Long">
		update user
		<set>
			version=version+1
		</set>
		where id =#{id}
	</update>
</mapper>